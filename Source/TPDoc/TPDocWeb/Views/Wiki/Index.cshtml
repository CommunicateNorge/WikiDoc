@model Dictionary<string, string>
@using Wiki.Utilities;
@{
    ViewBag.Title = "Index";
}

<section class="content">
    <section id="manualContentLinks">
        @if (User.CanEdit(Model["Manual_Blob_Adr"]))
        {
            <p class="indexNewGlyph"><a id="indexNewThumbButton" class="addNewThumb" data-toggle="tooltip" title="Add new thumbnail" href="#"><span class="glyphicon glyphicon-new-window" aria-hidden="true"></span></a></p>
            <span id="indexHistoryGlyph"><a data-toggle="tooltip" title="History" href="@Url.Action("History", new { id = "Manual£Index£Thumbnails" })"><span class="glyphicon glyphicon-import" aria-hidden="true"></span></a></span>
            <span id="indexHistoryGlyph" class="marginLeftTen"><a data-toggle="tooltip" title="Sort" href="#" class="sortThumbs"><span class="glyphicon glyphicon-sort" aria-hidden="true"></span></a></span>
        }
         <div class="row" id="rowContainer">
            <div class="col-sm-16 col-md-12 indexThumb">
                <div class="thumbnail">
                    <div class="caption">
                        <h3 class="thumbH3">@System.Configuration.ConfigurationManager.AppSettings["WelcomeText"]</h3>
                        @Html.Raw(Model["Manual_Content"])
                        <p class="floatRight indexEditGlyph"><a data-toggle="tooltip" title="Edit" href="@Url.Action("Edit", "Wiki", new { id = Model["Manual_Blob_Adr"] })"><span class=" glyphicon glyphicon-edit" aria-hidden="true"></span></a></p>
                    </div>
                </div>
            </div>
             <div id="saveButtonSort" hidden><input type="button" id="buttonSaveDrag" class="btn btn-success" value="Save"></div>
        </div>
        <div class="row" id="sortable"> @Html.Raw(Model["Thumbnails"])</div>
        <div class="row">
            <div class="indexThumb col-md-4 col-sm-6">
                <div class="thumbnail">
                    <div class="caption">
                        <h3 class="thumbH3">Latest Edited Pages</h3>
                        @Html.Raw(Model["Latest_Blobs"])
                    </div>
                </div>
            </div>
        </div>
    </section>
</section>

@section breadcrumb
{
    <li class="active">Index</li>
}

@section scripts
{
    <script src="https://code.jquery.com/ui/1.12.0-rc.2/jquery-ui.min.js" integrity="sha256-55Jz3pBCF8z9jBO1qQ7cIf0L+neuPTD1u7Ytzrp2dqo=" crossorigin="anonymous"></script>
    <script>
    //Rezises the latestPages table if window size is less than 1200 width
    $(document).ready(function ()
    {
        if ($(window).width() < 1200)
        {
            reSizeTable();
        }
    });


    function reSizeTable()
    {
        $(".caption td a").each(function () {
            var t = $(this).text();
            var regEx = /\/(.*)$/gi;
            var match = regEx.exec(t);

            var sp = t.split('/');
            $(this).text(sp[sp.length - 1])

        })
    }
    //Rezises the latestPages table if window size is rezised to be less than 1200 width
    $(window).resize(function ()
    {
        if ($(this).width() < 1200)
        {
            reSizeTable();
        }
    });


    $(".editThumbIcon").click(function () {
        var imgLink = $(this).parent().siblings('a').children('img').attr('src');
        var titleLink = $(this).parent().siblings('a').attr('href');
        var title = $(this).parent().siblings('a').children('h3').text();
        var text = $(this).parent().siblings('p').text();
        var url = "@Url.Action("GetEditThumbnailHTML", "Wiki")";
        var id = $(this).closest('.indexThumb').attr("id");


        $.ajax({
            url: url,
            type: 'POST',
            data: '{ "imgLink":"' + imgLink + '", "titleLink": "' + titleLink + '", "title": "' + title + '", "text": "' + text + '"}',
            contentType: 'application/json',
            async: true,
            success: function (data) {
                if (data == "failure") {
                    alert("Something went wrong while sending the request to the API.");
                }
                else
                {
                    $("#" + id).html(data);
                }
            }

        });
        return false;
    });

    $(".removeThumbIcon").click(function ()
    {
        if (!confirm("Are you sure you want to delete this thumbnail?"))
        {
            return false;
        }

        var url = "@Url.Action("RemoveThumbnail", "Wiki")";
            var id = $(this).closest('.indexThumb').attr("id");


            $.ajax({
                url: url,
                type: 'POST',
                data: '{ "id":"' + id + '"}',
                contentType: 'application/json',
                async: true,
                success: function (data) {
                    if (data == "failure") {
                        alert("Something went wrong while sending the request to the API.");
                    }
                    else
                    {
                        $("#" + id).html("");
                    }
                }

            });
            return false;
        });

        $(".sortThumbs").click(function ()
        {
            if ($('#saveButtonSort').is(":visible"))
            {
                $("#sortable").sortable("disable")
                $('#saveButtonSort').hide();
            }
            else
            {
                $("#sortable").sortable({
                    revert: true
                });

                $("#sortable").sortable("enable")

                $('#saveButtonSort').show();
            }

            return false;
        });


        $("#buttonSaveDrag").click(function (event)
        {
            var data = $('#sortable').html();
            var url = "@Url.Action("UpdateIndexThumbs", "Wiki")";
            data = encodeURIComponent(data);

            $.ajax({
                url: url,
                type: 'POST',
                data: '{ "data":"' + data + '"}',
                contentType: 'application/json',
                async: true,
                success: function (data) {
                    if (data == "failure")
                    {
                        alert("Something went wrong while sending the request to the API.");
                    }
                    else
                    {
                        location.reload();
                    }
                }

            });
            return false;
        });

        $(".addNewThumb").click(function () {
            var url = "@Url.Action("GetCreateThumbnailHTML", "Wiki")";

        $.ajax({
            url: url,
            type: 'POST',
            data: '{ "imgLink":"", "titleLink": "", "title": "", "text": ""}',
            contentType: 'application/json',
            async: true,
            success: function (data) {
                if (data == "failure") {
                    alert("Something went wrong while sending the request to the API.");
                }
                else
                {
                    var content = $("#rowContainer").html();
                    content += data;
                    $("#rowContainer").html(content);
                }
            }

        });
        return false;
    });

    function saveThumb() {
        var imgLink = $(this).siblings(".imgLinkTextBox").children('input').val();
        var titleLink = $(this).siblings(".titleLinkTextBox").children('input').val();
        var title = $(this).siblings(".titleTextBox").children('input').val();
        var text = $(this).siblings(".textTextBox").children('textarea').val();
        var url = "@Url.Action("EditThumbnail", "Wiki")";
        var id = $(this).closest('.indexThumb').attr("id");

        if (imgLink === "" || imgLink === undefined)
        {
            alert("Image link is required!");
            return false;
        }

        if (title === "" || title === undefined)
        {
            alert("Title is required!");
            return false;
        }

        if (text === "" || text === undefined) {
            alert("Text is required!");
            return false;
        }

        if (text.indexOf('<') >= 0)
        {
            alert("Text cannot contain html tags, this will be fixed in a future patch!");
            return false;
        }
        else if (text.indexOf('>') >= 0) {
            alert("Text cannot contain html tags, this will be fixed in a future patch!");
            return false;
        }


        if (titleLink === undefined)
        {
            titleLink == "";
        }

        text = encodeURIComponent(text);

        $.ajax({
            url: url,
            type: 'POST',
            data: '{ "imgLink":"' + imgLink + '", "titleLink": "' + titleLink + '", "title": "' + title + '", "text": "' + text + '", "id": "' + id + '"}',
            contentType: 'application/json',
            async: true,
            success: function (data) {
                if (data == "failure") {
                    alert("Something went wrong while sending the request to the API.");
                }
                else
                {
                    window.location.href = '/Wiki';
                }
            }

        });
        return false;
    }

    function createThumb() {
        var imgLink = $(this).siblings(".imgLinkTextBox").children('input').val();
        var titleLink = $(this).siblings(".titleLinkTextBox").children('input').val();
        var title = $(this).siblings(".titleTextBox").children('input').val();
        var text = $(this).siblings(".textTextBox").children('textarea').val();
        var url = "@Url.Action("AddThumbnail", "Wiki")";
        var id = $(this).closest('.indexThumb').attr("id");

        if (imgLink === "" || imgLink === undefined) {
            alert("Image link is required!");
            return false;
        }

        if (title === "" || title === undefined) {
            alert("Title link is required!");
            return false;
        }

        if (text === "" || text === undefined) {
            alert("Text link is required!");
            return false;
        }

        if (titleLink === undefined)
        {
            titleLink == "";
        }

        if (text.indexOf('<') >= 0)
        {
            alert("Text cannot contain html tags, this will be fixed in a future patch!");
            return false;
        }
        else if (text.indexOf('>') >= 0)
        {
            alert("Text cannot contain html tags, this will be fixed in a future patch!");
            return false;
        }

        text = encodeURIComponent(text);

        $.ajax({
            url: url,
            type: 'POST',
            data: '{ "imgLink":"' + imgLink + '", "title": "' + title + '", "text": "' + text + '", "titleLink": "' + titleLink + '"}',
            contentType: 'application/json',
            async: true,
            success: function (data) {
                if (data == "failure") {
                    alert("Something went wrong while sending the request to the API.");
                }
                else
                {
                    window.location.href = '/Wiki';
                }
            }

        });
        return false;
    }

    </script>
}

