@model Dictionary<string, string>
@using Wiki.Utilities;
@{
    string linkToThis = @"/Wiki/Page/" + Model["Manual_Blob_Adr"].Remove(@Model["Manual_Blob_Adr"].Length - 7);
    string[] breadCrumbs = Model["Auto_Blob_Adr"].SplitSimple("£");

    string[] environments = null;
    string primaryEnv = "";
}

@if (Model.ContainsKey("Environments"))
{
    environments = Model["Environments"].SplitSimple("|");
    primaryEnv = Model["PrimaryEnvironment"];
}

<link href="~/Scripts/swaggerui/css/reset.css" rel="stylesheet" />
<link href="~/Scripts/swaggerui/css/screen.css" rel="stylesheet" />
<link href="~/Scripts/swaggerui/css/style.css" rel="stylesheet" />
<link href="~/Scripts/swaggerui/css/typography.css" rel="stylesheet" />

<section id="allContent" class="content">
    <p id="hiddenSwaggerAdr" hidden>@Model["Auto_Blob_Adr"]</p>
    <p id="hiddenLinkText" hidden>@linkToThis</p>
    <section id="manualContentPage">

        @if (User.CanEdit(Model["Manual_Blob_Adr"]))
        {
            <span class="smallEditText">@Html.ActionLink("[Edit]", "Edit", new { id = Model["Manual_Blob_Adr"] })</span>
            <span class="smallEditText">@Html.ActionLink("[History]", "History", new { id = Model["Manual_Blob_Adr"] })</span>
        }
        <span class="smallEditText"><a class="getLinkToThisPage">[Link]</a></span>
        <div class="displayLinkToThisPage"></div>

        <h2>@Model["pageID"].Replace('€', '.')</h2>

        @if (@Model.ContainsKey("pageNav"))
        {
            <div class="pageNavDiv">
                @Html.Raw(@Model["pageNav"])
            </div>
        }
        <section class="manualContent">
            @if (Model["Manual_Content"] != null)
            {
                @Html.Raw(Model["Manual_Content"])
            }
        </section>
        @if (environments != null && primaryEnv != null)
        {
            <nav class="navbar navbar-default autoNavDivider">
                <div class="container-fluid">
                    <div class="navbar-header sectionDividerMenu">
                        <p class="navbar-text">Auto-generated Content for Environment: </p>
                        <ul class="nav navbar-nav">
                            <li class="dropdown">
                                <a class="dropdown-toggle" data-toggle="dropdown">
                                    <span id="environmentHeader">@primaryEnv</span>
                                    <span class="caret"></span>
                                </a>
                                <ul class="dropdown-menu">
                                    @foreach (var item in environments)
                                    {
                                        <li><a class="environmentTarget">@item</a></li>
                                    }
                                </ul>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
        }
        <section id="generatedContentPage">
            <div class="swagger-section">
                <div id="message-bar" class="swagger-ui-wrap" data-sw-translate>&nbsp;</div>
                <div id="swagger-ui-container" class="swagger-ui-wrap"></div>
            </div>
        </section>
    </section>
</section>

@section breadcrumb
{
    <li><a href="/Wiki">Index</a></li>
    @for (int i = 1; i < breadCrumbs.Length - 1; i++)
    {
        if (breadCrumbs[i].Length > 35)
        {
            <li><a href="@string.Concat("/Wiki/Page/Api£", breadCrumbs[i])">@string.Concat(WikiBlob.SanitizeV2(breadCrumbs[i].Substring(0, 32)), "...")</a></li>
        }
        else
        {
            <li><a href="@string.Concat("/Wiki/Page/Api£", breadCrumbs[i])">@WikiBlob.SanitizeV2(breadCrumbs[i])</a></li>
        }
    }
    @if (breadCrumbs[breadCrumbs.Length - 1].Length > 35)
    {
        <li class="active">@string.Concat(WikiBlob.SanitizeV2(breadCrumbs[breadCrumbs.Length - 1].Substring(0, 32)), "...")</li>
    }
    else
    {
        <li class="active">@(WikiBlob.SanitizeV2(breadCrumbs[breadCrumbs.Length - 1]))</li>
    }

}


    @section scripts
{
        <script src='~/Scripts/swaggerui/lib/jquery.slideto.min.js' type='text/javascript'></script>
        <script src='~/Scripts/swaggerui/lib/jquery.wiggle.min.js' type='text/javascript'></script>
        <script src='~/Scripts/swaggerui/lib/jquery.ba-bbq.min.js' type='text/javascript'></script>
        <script src='~/Scripts/swaggerui/lib/handlebars-2.0.0.js' type='text/javascript'></script>
        <script src='~/Scripts/swaggerui/lib/underscore-min.js' type='text/javascript'></script>
        <script src='~/Scripts/swaggerui/lib/backbone-min.js' type='text/javascript'></script>
        <script src='~/Scripts/swaggerui/swagger-ui.js' type='text/javascript'></script>
        <script src='~/Scripts/swaggerui/lib/highlight.7.3.pack.js' type='text/javascript'></script>
        <script src='~/Scripts/swaggerui/lib/jsoneditor.min.js' type='text/javascript'></script>
        <script src='~/Scripts/swaggerui/lib/marked.js' type='text/javascript'></script>
        <script src='~/Scripts/swaggerui/lib/swagger-oauth.js' type='text/javascript'></script>
        <script src="~/Scripts/PageFunctions.js"></script>
        <script>
            $(function ()
            {
                window.swaggerUi = new SwaggerUi
                ({
                    url: "/Wiki/GetFile/" + $('#hiddenSwaggerAdr').text(),
                    dom_id: "swagger-ui-container"
                });

                window.swaggerUi.load();
            });

            $(".environmentTarget").click(function myfunction()
            {
                $('swagger-ui-container').html('');

                var env = $(this).text();

                window.swaggerUi = new SwaggerUi
                ({
                    url: "/Wiki/GetFile/" + $('#hiddenSwaggerAdr').text() + '/' + env,
                    dom_id: "swagger-ui-container"
                });

                window.swaggerUi.load();
                $("#environmentHeader").text(env);
            })
        </script>


    }
