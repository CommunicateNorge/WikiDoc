@model Dictionary<string, string>
@using Wiki.Utilities;
@{
    string linkToThis = @"/Wiki/Page/" + @Model["Manual_Blob_Adr"];
    string phrase = (string)ViewBag.Phrase;
    string searchText = (string)ViewBag.searchText;
    string[] breadCrumbs = Model["Manual_Blob_Adr"].SplitSimple("£");

}

<section id="allContent" class="content">
    <p id="hiddenPhrase" hidden>@phrase</p>
    <p id="hiddenSearchText" hidden>@searchText</p>
    <p id="hiddenLinkText" hidden>@linkToThis</p>
    <section id="manualContentPage">
        @if (User.CanEdit(Model["Manual_Blob_Adr"]))
        {
            <span class="smallEditText">@Html.ActionLink("[Edit]", "Edit", new { id = Model["Manual_Blob_Adr"] })</span>
            <span class="smallEditText">@Html.ActionLink("[History]", "History", new { id = Model["Manual_Blob_Adr"] })</span>
        }
        <span class="smallEditText"><a class="getLinkToThisPage">[Link]</a></span>
        <div class="displayLinkToThisPage"></div>

        @if (@Model.ContainsKey("pageNav"))
        {
            <div class="pageNavDiv">
                @Html.Raw(@Model["pageNav"])
            </div>
        }
        <section class="manualContent">
            @Html.Raw(Model["Manual_Content"])
        </section>
    </section>
</section>


<br />
<br />

@section scripts {

    <script src="~/Scripts/PageFunctions.js"></script>
}

@section breadcrumb
{
    <li><a href="/Wiki">Index</a></li>
    <li class="active">@string.Concat(breadCrumbs[1])</li>
    @for (int i = 2; i < breadCrumbs.Length - 1; i++)
    {
        if (breadCrumbs[i-1] == "ApiServices")//SQL£Db£Schema
        {
            if (breadCrumbs[i].Length > 35)
            {

                <li><a href="@string.Concat("/Wiki/Page/Api£", breadCrumbs[i])">@string.Concat(WikiBlob.SanitizeV2(breadCrumbs[i].Substring(0, 32)), "...")</a></li>
            }
            else
            {
                <li><a href="@string.Concat("/Wiki/Page/Api£", breadCrumbs[i])">@WikiBlob.SanitizeV2(breadCrumbs[i])</a></li>
            }
        }
        else if (breadCrumbs[i - 1] == "Database")
        {
            if (breadCrumbs[i].Length > 35)
            {

                <li><a href="@string.Concat("/Wiki/Page/SQL£Db£Schema£", breadCrumbs[i])">@string.Concat(WikiBlob.SanitizeV2(breadCrumbs[i].Substring(0, 32)), "...")</a></li>
            }
            else
            {
                <li><a href="@string.Concat("/Wiki/Page/SQL£Db£Schema£", breadCrumbs[i])">@WikiBlob.SanitizeV2(breadCrumbs[i])</a></li>
            }
        }
        else if (breadCrumbs[i - 1] == "BizTalk")
        {
            if (breadCrumbs[i].Length > 35)
            {

                <li><a href="@string.Concat("/Wiki/Page/Integration£", breadCrumbs[i])">@string.Concat(WikiBlob.SanitizeV2(breadCrumbs[i].Substring(0, 32)), "...")</a></li>
            }
            else
            {
                <li><a href="@string.Concat("/Wiki/Page/Integration£", breadCrumbs[i])">@WikiBlob.SanitizeV2(breadCrumbs[i])</a></li>
            }
        }
        else
        {
            string urlBase = null;

            for (int j = 0; j < breadCrumbs.Length - 2; j++)
            {
                urlBase += WikiBlob.SanitizeV2(breadCrumbs[j]) + "£";
            }

            if (breadCrumbs[i].Length > 35)
            {

                @*<li><a href="@string.Concat("/Wiki/Page/", urlBase, breadCrumbs[i])">@string.Concat(breadCrumbs[i].Substring(0, 32).Replace('€', '.'), "...")</a></li>TODO FIX!*@
                <li class="active">@string.Concat(WikiBlob.DeSanitize(breadCrumbs[i].Substring(0, 32)), "...")</li>
            }
            else
            {
                <li><a href="@string.Concat("/Wiki/Page/", urlBase, breadCrumbs[i])">@WikiBlob.SanitizeV2(breadCrumbs[i])</a></li>
            }
        }

    }

    @if (breadCrumbs[breadCrumbs.Length - 1].Length > 35)
    {
        <li class="active">@string.Concat(WikiBlob.SanitizeV2(breadCrumbs[breadCrumbs.Length - 1].Substring(0, 32)), "...")</li>
    }
    else
    {
        <li class="active">@WikiBlob.SanitizeV2(breadCrumbs[breadCrumbs.Length - 1])</li>
    }
   

}